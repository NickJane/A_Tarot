@using Authorizations.Framework.Enums;
@using Lib.ClassExt;
@using BLL.Enums;
@model Data.Framework.Model.CardFormation
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="../../Scripts/CardFormation.js" type="text/javascript"></script>
<script src="../../Scripts/OtherJS/FormationDrag.js" type="text/javascript"></script>
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@(ViewBag.IsEdit == true ? "编辑" : "添加")</legend>
        @Html.HiddenFor(model => model.CardFormationID)
        <div class="editor-label">
            @Html.LabelFor(model => model.FormationName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FormationName) @Html.ValidationMessageFor(model => model.FormationName)
        </div>
        <br>
        <div class="editor-label">
            @Html.LabelFor(model => model.Describe)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Describe, new { style = "width:300px;" }) @Html.ValidationMessageFor(model => model.Describe)
        </div>
        <br>
        <div class="editor-label">
            @Html.LabelFor(model => model.NeedAllCards)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.NeedAllCards, new SelectList(BLL.Enums.TarotF_NeedAllCards.All.ToDictionary().ToList(), "key", "value"))
        </div>
        <br>
        <div class="editor-label">
            @Html.LabelFor(model => model.PlaceHeight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PlaceHeight) @Html.ValidationMessageFor(model => model.PlaceHeight)
        </div>
        <br>
        <div class="editor-label">
            @Html.LabelFor(model => model.PlaceWidth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PlaceWidth) @Html.ValidationMessageFor(model => model.PlaceWidth)
            <input type="button" value="change" onclick="changeDiv()" />
            <script type="text/javascript">
                function changeDiv() {
                    $('#divFormation').css("width", $('#PlaceWidth').val()); $('#divFormation').css('height', $('#PlaceHeight').val());
                }
            </script>
        </div>
        <br>
        <script type="text/javascript">
            function getHeight(wid) {
                document.getElementById('Height').value = (wid.value == "" ? "" : (parseInt(wid.value) * 340 / 200));
            }
            function AddCard() {
                var x = parseFloat($("#X").val());
                var y = parseFloat($("#Y").val());
                var h = parseFloat($("#Height").val());
                var w = parseFloat($("#Width").val());
                var des = $("#describe").val();
                var index = parseFloat($("#Index").val());
                if ($("#div" + index).length > 0 || des.trim()=="")
                    return;
                //{x:left, y:top, index:牌阵的第几张牌, w:宽, h:高, desc:描述}
                CardFormationJS.AddCardPlaceToDiv($("#divFormation")[0], $("#divFormationDesc")[0],
            { x: x, y: y, w: w, h: h, index: index, desc: $("#describe").val() });

                var drag = new Drag("divTarotCard" + index, { mxContainer: "divFormation", Handle: "divTarotCard" + index, Limit: true,
                    onStart: function () { /*GetElement("idShow").innerHTML = "开始拖放";*/ },
                    onMove: function () { /*GetElement("idShow").innerHTML = "left：" + this.Drag.offsetLeft + "；top:" + this.Drag.offsetTop;*/ },
                    onStop: function () {/* GetElement("idShow").innerHTML = "结束拖放"; */}
                });


                $("#Index").val((index + 1));
                $("#txtDelIndex").val((index));
                $("#describe").val('');
                //$("#X").val(x + 20);
                var div = $("#div" + index);

            }
            function RemoveCard() {
                var index = parseFloat($("#txtDelIndex").val());
                CardFormationJS.RemoveCardPlaceFromDiv(index);
                if (index > 0) {
                    $("#Index").val(index);
                    $("#txtDelIndex").val(--index)
                }
            }
        </script>
        @{ var placeheight = Model.PlaceHeight == 0 ? 500 : Model.PlaceHeight;
           var placewidth = Model.PlaceWidth == 0 ? 500 : Model.PlaceWidth;
           }
        <div style="width: 1024px;">
            <div style="width: 700px; height: @(placeheight + "px");; border: 1px solid red; float: left;">
                <div id="divFormation" style="width: @(placewidth + "px"); height: @(placeheight + "px");; border-right: 1px solid red;
                    position: relative; float: left">
                </div>
                <div id="divFormationDesc" style="width: 190px; height: @(placeheight + "px");; float: right; border: 1px solid blue;">
                </div>
            </div>
            <div style="width: 300px; height: @(placeheight + "px");; border: 1px solid red; float: right">
                X<input type="text" id="X"  readonly value="50" /><br />
                Y<input type="text" id="Y" readonly value="50" /><br />
                Width<input type="text" onkeyup="getHeight(this)" id="Width"  value="50" /><br />
                Height<input type="text" id="Height"  value="85" /><br />
                Index<input type="text"  id="Index" value="1" /><br />
                说明<textarea type="text"  id="describe" value=""></textarea><br />
                <input type="button" onclick="AddCard()" value="增加一张牌" />
                <br />
                <input type="button" onclick="RemoveCard()" value="删除这张牌" /><input type="text" id="txtDelIndex"
                    style="width: 50px;" value="" />
                <br />
                <input type="button" onclick="javascript:if(confirm('确定')) {$('#divFormation').html('');$('#divFormationDesc').html('');$('#Index').val(1);$('#txtDelIndex').val('');}" value="删除所有牌" />
            </div>
        </div>
        
        @Html.ValidationSummary(true)
        <p>
            <input type="submit" value="@(!ViewBag.IsEdit ? "Add" : "Save")" />
            <a href="/cardformation/list">返回...</a> @*<input type="button" value="123" onclick="$('.l-dialog-waittingdialog,.l-window-mask,.l-dialog', window.parent.document).remove();" />*@
        </p>
    </fieldset>
}
<!--表单验证 -->
<script>
    function ValidateForm() {
        //更多validate验证方法见 jquery.validate.MethodsExt.js
        $("form").validate({
            rules: {
                'FormationName': { required: true, maxlength: 50 },
                'Describe': { required: true, maxlength: 500 },
                'PlaceHeight': {required:true, min:300, number:true},
                'PlaceWidth': {required:true, min:300, number:true}
                //                ,'State': { required: true, number: true },
                //                'NeedAllCards': { required: true }
            },
            messages: {
                CardFormationID: { required: 'CardFormationID不能为空', number: 'CardFormationID必须为数字' },
                FormationName: { required: 'FormationName不能为空', maxlength: 'FormationName长度不能超过50' },
                Describe: { required: 'Describe不能为空', maxlength: 'Describe长度不能超过500' },
                Popularity: { required: 'Popularity不能为空', number: 'Popularity必须为数字' },
                State: { required: 'State不能为空', number: 'State必须为数字' },
                NeedAllCards: { required: 'NeedAllCards不能为空' }
            }
        });
        @{
        var FormationCards = ViewBag.FormationCards as List<Data.Framework.Model.CardFormationCore>;
        }
        @if(ViewBag.IsEdit){
            foreach (var item in FormationCards)
                {
                    <text> 
                        CardFormationJS.AddCardPlaceToDiv($("#divFormation")[0], $("#divFormationDesc")[0],
                            { x: @item.X, y: @item.Y, w: @item.W, h: @item.H, index: @item.SortIndex, desc: '@item.Describe' });
                        var drag = new Drag("divTarotCard" + @item.SortIndex, { mxContainer: "divFormation", Handle: "divTarotCard" + @item.SortIndex, Limit: true,
                            onStart: function () { /*GetElement("idShow").innerHTML = "开始拖放";*/ },
                            onMove: function () { /*GetElement("idShow").innerHTML = "left：" + this.Drag.offsetLeft + "；top:" + this.Drag.offsetTop;*/ },
                            onStop: function () {/* GetElement("idShow").innerHTML = "结束拖放"; */}
                        });
                    </text>
                }
        }
    }
    document.forms[0].onsubmit = function () {
        var cards = $("div[id^='divTarotCard']", "#divFormation");
        var descs = $("div[id^='divTarotCardDesc']", "#divFormationDesc");
        var length = cards.length;
        for (var i = 0; i < length; i++) {
            Tools.CreateHidden({ name: "SortIndex" + cards[i].getAttribute('index'), value: "'" + cards[i].getAttribute('index') + "'" });
            Tools.CreateHidden({ name: "X" + cards[i].getAttribute('index'), value: "'" + $(cards[i]).css("left").replace('px','') + "'" });
            Tools.CreateHidden({ name: "Y" + cards[i].getAttribute('index'), value: "'" + $(cards[i]).css("top").replace('px', '') + "'" });
            Tools.CreateHidden({ name: "Des" + cards[i].getAttribute('index'), value: "'" + $(descs[i]).html().replace('px', '') + "'" });
            Tools.CreateHidden({ name: "W" + cards[i].getAttribute('index'), value: "'" + $(cards[i]).css("width").replace('px', '') + "'" });
            Tools.CreateHidden({ name: "H" + cards[i].getAttribute('index'), value: "'" + $(cards[i]).css("height").replace('px', '') + "'" });
        }
    }
    $("document").ready(function () {
        ValidateForm();
    });
</script>
