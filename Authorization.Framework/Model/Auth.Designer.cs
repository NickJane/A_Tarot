//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Resource", "Auth_Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authorizations.Framework.Model.Auth_Resource), "Auth_RoleResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authorizations.Framework.Model.Auth_RoleResource), true)]
[assembly: EdmRelationshipAttribute("MyOLExamModel", "FK_Auth_UserResource_Auth_Resource", "Auth_Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authorizations.Framework.Model.Auth_Resource), "Auth_UserResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authorizations.Framework.Model.Auth_UserResource), true)]
[assembly: EdmRelationshipAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Role", "Auth_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authorizations.Framework.Model.Auth_Role), "Auth_RoleResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authorizations.Framework.Model.Auth_RoleResource), true)]
[assembly: EdmRelationshipAttribute("MyOLExamModel", "FK_Auth_UserRole_Auth_Role", "Auth_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Authorizations.Framework.Model.Auth_Role), "Auth_UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Authorizations.Framework.Model.Auth_UserRole), true)]

#endregion

namespace Authorizations.Framework.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class AuthEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“AuthEntities”部分中的连接字符串初始化新 AuthEntities 对象。
        /// </summary>
        public AuthEntities() : base("name=AuthEntities", "AuthEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AuthEntities 对象。
        /// </summary>
        public AuthEntities(string connectionString) : base(connectionString, "AuthEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AuthEntities 对象。
        /// </summary>
        public AuthEntities(EntityConnection connection) : base(connection, "AuthEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Auth_Resource> Auth_Resource
        {
            get
            {
                if ((_Auth_Resource == null))
                {
                    _Auth_Resource = base.CreateObjectSet<Auth_Resource>("Auth_Resource");
                }
                return _Auth_Resource;
            }
        }
        private ObjectSet<Auth_Resource> _Auth_Resource;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Auth_Role> Auth_Role
        {
            get
            {
                if ((_Auth_Role == null))
                {
                    _Auth_Role = base.CreateObjectSet<Auth_Role>("Auth_Role");
                }
                return _Auth_Role;
            }
        }
        private ObjectSet<Auth_Role> _Auth_Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Auth_RoleResource> Auth_RoleResource
        {
            get
            {
                if ((_Auth_RoleResource == null))
                {
                    _Auth_RoleResource = base.CreateObjectSet<Auth_RoleResource>("Auth_RoleResource");
                }
                return _Auth_RoleResource;
            }
        }
        private ObjectSet<Auth_RoleResource> _Auth_RoleResource;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Auth_UserResource> Auth_UserResource
        {
            get
            {
                if ((_Auth_UserResource == null))
                {
                    _Auth_UserResource = base.CreateObjectSet<Auth_UserResource>("Auth_UserResource");
                }
                return _Auth_UserResource;
            }
        }
        private ObjectSet<Auth_UserResource> _Auth_UserResource;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Auth_UserRole> Auth_UserRole
        {
            get
            {
                if ((_Auth_UserRole == null))
                {
                    _Auth_UserRole = base.CreateObjectSet<Auth_UserRole>("Auth_UserRole");
                }
                return _Auth_UserRole;
            }
        }
        private ObjectSet<Auth_UserRole> _Auth_UserRole;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Auth_Resource EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuth_Resource(Auth_Resource auth_Resource)
        {
            base.AddObject("Auth_Resource", auth_Resource);
        }
    
        /// <summary>
        /// 用于向 Auth_Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuth_Role(Auth_Role auth_Role)
        {
            base.AddObject("Auth_Role", auth_Role);
        }
    
        /// <summary>
        /// 用于向 Auth_RoleResource EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuth_RoleResource(Auth_RoleResource auth_RoleResource)
        {
            base.AddObject("Auth_RoleResource", auth_RoleResource);
        }
    
        /// <summary>
        /// 用于向 Auth_UserResource EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuth_UserResource(Auth_UserResource auth_UserResource)
        {
            base.AddObject("Auth_UserResource", auth_UserResource);
        }
    
        /// <summary>
        /// 用于向 Auth_UserRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuth_UserRole(Auth_UserRole auth_UserRole)
        {
            base.AddObject("Auth_UserRole", auth_UserRole);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyOLExamModel", Name="Auth_Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auth_Resource : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Auth_Resource 对象。
        /// </summary>
        /// <param name="resourceID">ResourceID 属性的初始值。</param>
        /// <param name="resourceCode">ResourceCode 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        /// <param name="resourceType">ResourceType 属性的初始值。</param>
        /// <param name="languageCode">LanguageCode 属性的初始值。</param>
        public static Auth_Resource CreateAuth_Resource(global::System.Int32 resourceID, global::System.String resourceCode, global::System.Int32 state, global::System.Int32 resourceType, global::System.String languageCode)
        {
            Auth_Resource auth_Resource = new Auth_Resource();
            auth_Resource.ResourceID = resourceID;
            auth_Resource.ResourceCode = resourceCode;
            auth_Resource.State = state;
            auth_Resource.ResourceType = resourceType;
            auth_Resource.LanguageCode = languageCode;
            return auth_Resource;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceCode
        {
            get
            {
                return _ResourceCode;
            }
            set
            {
                OnResourceCodeChanging(value);
                ReportPropertyChanging("ResourceCode");
                _ResourceCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceCode");
                OnResourceCodeChanged();
            }
        }
        private global::System.String _ResourceCode;
        partial void OnResourceCodeChanging(global::System.String value);
        partial void OnResourceCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceUrl
        {
            get
            {
                return _ResourceUrl;
            }
            set
            {
                OnResourceUrlChanging(value);
                ReportPropertyChanging("ResourceUrl");
                _ResourceUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceUrl");
                OnResourceUrlChanged();
            }
        }
        private global::System.String _ResourceUrl;
        partial void OnResourceUrlChanging(global::System.String value);
        partial void OnResourceUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceType
        {
            get
            {
                return _ResourceType;
            }
            set
            {
                OnResourceTypeChanging(value);
                ReportPropertyChanging("ResourceType");
                _ResourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceType");
                OnResourceTypeChanged();
            }
        }
        private global::System.Int32 _ResourceType;
        partial void OnResourceTypeChanging(global::System.Int32 value);
        partial void OnResourceTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageCode
        {
            get
            {
                return _LanguageCode;
            }
            set
            {
                OnLanguageCodeChanging(value);
                ReportPropertyChanging("LanguageCode");
                _LanguageCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LanguageCode");
                OnLanguageCodeChanged();
            }
        }
        private global::System.String _LanguageCode;
        partial void OnLanguageCodeChanging(global::System.String value);
        partial void OnLanguageCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderIndex
        {
            get
            {
                return _OrderIndex;
            }
            set
            {
                OnOrderIndexChanging(value);
                ReportPropertyChanging("OrderIndex");
                _OrderIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderIndex");
                OnOrderIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderIndex;
        partial void OnOrderIndexChanging(Nullable<global::System.Int32> value);
        partial void OnOrderIndexChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Resource", "Auth_RoleResource")]
        public EntityCollection<Auth_RoleResource> Auth_RoleResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auth_RoleResource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_RoleResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auth_RoleResource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_RoleResource", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_UserResource_Auth_Resource", "Auth_UserResource")]
        public EntityCollection<Auth_UserResource> Auth_UserResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auth_UserResource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_UserResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auth_UserResource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_UserResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyOLExamModel", Name="Auth_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auth_Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Auth_Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="languagueCode">LanguagueCode 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        /// <param name="isSuperRole">IsSuperRole 属性的初始值。</param>
        /// <param name="applicationID">ApplicationID 属性的初始值。</param>
        public static Auth_Role CreateAuth_Role(global::System.Int32 roleID, global::System.String languagueCode, global::System.Int32 state, global::System.Boolean isSuperRole, global::System.Int32 applicationID)
        {
            Auth_Role auth_Role = new Auth_Role();
            auth_Role.RoleID = roleID;
            auth_Role.LanguagueCode = languagueCode;
            auth_Role.State = state;
            auth_Role.IsSuperRole = isSuperRole;
            auth_Role.ApplicationID = applicationID;
            return auth_Role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguagueCode
        {
            get
            {
                return _LanguagueCode;
            }
            set
            {
                OnLanguagueCodeChanging(value);
                ReportPropertyChanging("LanguagueCode");
                _LanguagueCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LanguagueCode");
                OnLanguagueCodeChanged();
            }
        }
        private global::System.String _LanguagueCode;
        partial void OnLanguagueCodeChanging(global::System.String value);
        partial void OnLanguagueCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuperRole
        {
            get
            {
                return _IsSuperRole;
            }
            set
            {
                OnIsSuperRoleChanging(value);
                ReportPropertyChanging("IsSuperRole");
                _IsSuperRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuperRole");
                OnIsSuperRoleChanged();
            }
        }
        private global::System.Boolean _IsSuperRole;
        partial void OnIsSuperRoleChanging(global::System.Boolean value);
        partial void OnIsSuperRoleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Role", "Auth_RoleResource")]
        public EntityCollection<Auth_RoleResource> Auth_RoleResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auth_RoleResource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_RoleResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auth_RoleResource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_RoleResource", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_UserRole_Auth_Role", "Auth_UserRole")]
        public EntityCollection<Auth_UserRole> Auth_UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auth_UserRole>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auth_UserRole>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyOLExamModel", Name="Auth_RoleResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auth_RoleResource : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Auth_RoleResource 对象。
        /// </summary>
        /// <param name="roleResourceID">RoleResourceID 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="resourceID">ResourceID 属性的初始值。</param>
        /// <param name="timeMark">TimeMark 属性的初始值。</param>
        public static Auth_RoleResource CreateAuth_RoleResource(global::System.Int32 roleResourceID, global::System.Int32 roleID, global::System.Int32 resourceID, global::System.Byte[] timeMark)
        {
            Auth_RoleResource auth_RoleResource = new Auth_RoleResource();
            auth_RoleResource.RoleResourceID = roleResourceID;
            auth_RoleResource.RoleID = roleID;
            auth_RoleResource.ResourceID = resourceID;
            auth_RoleResource.TimeMark = timeMark;
            return auth_RoleResource;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleResourceID
        {
            get
            {
                return _RoleResourceID;
            }
            set
            {
                OnRoleResourceIDChanging(value);
                ReportPropertyChanging("RoleResourceID");
                _RoleResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleResourceID");
                OnRoleResourceIDChanged();
            }
        }
        private global::System.Int32 _RoleResourceID;
        partial void OnRoleResourceIDChanging(global::System.Int32 value);
        partial void OnRoleResourceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeMark
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeMark);
            }
            set
            {
                OnTimeMarkChanging(value);
                ReportPropertyChanging("TimeMark");
                _TimeMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeMark");
                OnTimeMarkChanged();
            }
        }
        private global::System.Byte[] _TimeMark;
        partial void OnTimeMarkChanging(global::System.Byte[] value);
        partial void OnTimeMarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Resource", "Auth_Resource")]
        public Auth_Resource Auth_Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_Resource").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auth_Resource> Auth_ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_RoleResource_Auth_Resource", "Auth_Resource", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_RoleResource_Auth_Role", "Auth_Role")]
        public Auth_Role Auth_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auth_Role> Auth_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_RoleResource_Auth_Role", "Auth_Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyOLExamModel", Name="Auth_UserResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auth_UserResource : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Auth_UserResource 对象。
        /// </summary>
        /// <param name="userRerouceID">UserRerouceID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="resourceID">ResourceID 属性的初始值。</param>
        /// <param name="timeMark">TimeMark 属性的初始值。</param>
        public static Auth_UserResource CreateAuth_UserResource(global::System.Int32 userRerouceID, global::System.Int32 userID, global::System.Int32 resourceID, global::System.Byte[] timeMark)
        {
            Auth_UserResource auth_UserResource = new Auth_UserResource();
            auth_UserResource.UserRerouceID = userRerouceID;
            auth_UserResource.UserID = userID;
            auth_UserResource.ResourceID = resourceID;
            auth_UserResource.TimeMark = timeMark;
            return auth_UserResource;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRerouceID
        {
            get
            {
                return _UserRerouceID;
            }
            set
            {
                OnUserRerouceIDChanging(value);
                ReportPropertyChanging("UserRerouceID");
                _UserRerouceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRerouceID");
                OnUserRerouceIDChanged();
            }
        }
        private global::System.Int32 _UserRerouceID;
        partial void OnUserRerouceIDChanging(global::System.Int32 value);
        partial void OnUserRerouceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeMark
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeMark);
            }
            set
            {
                OnTimeMarkChanging(value);
                ReportPropertyChanging("TimeMark");
                _TimeMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeMark");
                OnTimeMarkChanged();
            }
        }
        private global::System.Byte[] _TimeMark;
        partial void OnTimeMarkChanging(global::System.Byte[] value);
        partial void OnTimeMarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_UserResource_Auth_Resource", "Auth_Resource")]
        public Auth_Resource Auth_Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_Resource").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auth_Resource> Auth_ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auth_Resource>("MyOLExamModel.FK_Auth_UserResource_Auth_Resource", "Auth_Resource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyOLExamModel", Name="Auth_UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auth_UserRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Auth_UserRole 对象。
        /// </summary>
        /// <param name="userRoleID">UserRoleID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="timeMark">TimeMark 属性的初始值。</param>
        public static Auth_UserRole CreateAuth_UserRole(global::System.Int32 userRoleID, global::System.Int32 userID, global::System.Int32 roleID, global::System.Byte[] timeMark)
        {
            Auth_UserRole auth_UserRole = new Auth_UserRole();
            auth_UserRole.UserRoleID = userRoleID;
            auth_UserRole.UserID = userID;
            auth_UserRole.RoleID = roleID;
            auth_UserRole.TimeMark = timeMark;
            return auth_UserRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeMark
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeMark);
            }
            set
            {
                OnTimeMarkChanging(value);
                ReportPropertyChanging("TimeMark");
                _TimeMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeMark");
                OnTimeMarkChanged();
            }
        }
        private global::System.Byte[] _TimeMark;
        partial void OnTimeMarkChanging(global::System.Byte[] value);
        partial void OnTimeMarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyOLExamModel", "FK_Auth_UserRole_Auth_Role", "Auth_Role")]
        public Auth_Role Auth_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auth_Role> Auth_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auth_Role>("MyOLExamModel.FK_Auth_UserRole_Auth_Role", "Auth_Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
