//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("TarotModel", "FK_Ral_CardF_Tag_Tag", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Framework.Model.Tag), "Ral_CardF_Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Framework.Model.Ral_CardF_Tag), true)]
[assembly: EdmRelationshipAttribute("TarotModel", "FK_Ral_CardF_Tag_CardFormation", "CardFormation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Framework.Model.CardFormation), "Ral_CardF_Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Framework.Model.Ral_CardF_Tag), true)]
[assembly: EdmRelationshipAttribute("TarotModel", "FK_Ral_CardF_Card_CardFormation", "CardFormation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Framework.Model.CardFormation), "CardFormationCore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Framework.Model.CardFormationCore), true)]

#endregion

namespace Data.Framework.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class TarotEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“TarotEntities”部分中的连接字符串初始化新 TarotEntities 对象。
        /// </summary>
        public TarotEntities() : base("name=TarotEntities", "TarotEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TarotEntities 对象。
        /// </summary>
        public TarotEntities(string connectionString) : base(connectionString, "TarotEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TarotEntities 对象。
        /// </summary>
        public TarotEntities(EntityConnection connection) : base(connection, "TarotEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Ral_CardF_Tag> Ral_CardF_Tag
        {
            get
            {
                if ((_Ral_CardF_Tag == null))
                {
                    _Ral_CardF_Tag = base.CreateObjectSet<Ral_CardF_Tag>("Ral_CardF_Tag");
                }
                return _Ral_CardF_Tag;
            }
        }
        private ObjectSet<Ral_CardF_Tag> _Ral_CardF_Tag;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TarotCard> TarotCard
        {
            get
            {
                if ((_TarotCard == null))
                {
                    _TarotCard = base.CreateObjectSet<TarotCard>("TarotCard");
                }
                return _TarotCard;
            }
        }
        private ObjectSet<TarotCard> _TarotCard;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CardFormation> CardFormation
        {
            get
            {
                if ((_CardFormation == null))
                {
                    _CardFormation = base.CreateObjectSet<CardFormation>("CardFormation");
                }
                return _CardFormation;
            }
        }
        private ObjectSet<CardFormation> _CardFormation;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CardFormationCore> CardFormationCore
        {
            get
            {
                if ((_CardFormationCore == null))
                {
                    _CardFormationCore = base.CreateObjectSet<CardFormationCore>("CardFormationCore");
                }
                return _CardFormationCore;
            }
        }
        private ObjectSet<CardFormationCore> _CardFormationCore;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SystemConfig> SystemConfig
        {
            get
            {
                if ((_SystemConfig == null))
                {
                    _SystemConfig = base.CreateObjectSet<SystemConfig>("SystemConfig");
                }
                return _SystemConfig;
            }
        }
        private ObjectSet<SystemConfig> _SystemConfig;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<dic_Province> Dic_Province
        {
            get
            {
                if ((_Dic_Province == null))
                {
                    _Dic_Province = base.CreateObjectSet<dic_Province>("Dic_Province");
                }
                return _Dic_Province;
            }
        }
        private ObjectSet<dic_Province> _Dic_Province;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Dictionary> Dictionary
        {
            get
            {
                if ((_Dictionary == null))
                {
                    _Dictionary = base.CreateObjectSet<Dictionary>("Dictionary");
                }
                return _Dictionary;
            }
        }
        private ObjectSet<Dictionary> _Dictionary;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Ral_CardF_Tag EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRal_CardF_Tag(Ral_CardF_Tag ral_CardF_Tag)
        {
            base.AddObject("Ral_CardF_Tag", ral_CardF_Tag);
        }
    
        /// <summary>
        /// 用于向 Tag EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }
    
        /// <summary>
        /// 用于向 TarotCard EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTarotCard(TarotCard tarotCard)
        {
            base.AddObject("TarotCard", tarotCard);
        }
    
        /// <summary>
        /// 用于向 CardFormation EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCardFormation(CardFormation cardFormation)
        {
            base.AddObject("CardFormation", cardFormation);
        }
    
        /// <summary>
        /// 用于向 CardFormationCore EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCardFormationCore(CardFormationCore cardFormationCore)
        {
            base.AddObject("CardFormationCore", cardFormationCore);
        }
    
        /// <summary>
        /// 用于向 SystemConfig EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSystemConfig(SystemConfig systemConfig)
        {
            base.AddObject("SystemConfig", systemConfig);
        }
    
        /// <summary>
        /// 用于向 Dic_Province EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDic_Province(dic_Province dic_Province)
        {
            base.AddObject("Dic_Province", dic_Province);
        }
    
        /// <summary>
        /// 用于向 Dictionary EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDictionary(Dictionary dictionary)
        {
            base.AddObject("Dictionary", dictionary);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="CardFormation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardFormation : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CardFormation 对象。
        /// </summary>
        /// <param name="cardFormationID">CardFormationID 属性的初始值。</param>
        /// <param name="formationName">FormationName 属性的初始值。</param>
        /// <param name="describe">Describe 属性的初始值。</param>
        /// <param name="popularity">Popularity 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        /// <param name="needAllCards">NeedAllCards 属性的初始值。</param>
        /// <param name="placeHeight">PlaceHeight 属性的初始值。</param>
        /// <param name="placeWidth">PlaceWidth 属性的初始值。</param>
        public static CardFormation CreateCardFormation(global::System.Int32 cardFormationID, global::System.String formationName, global::System.String describe, global::System.Int32 popularity, global::System.Int32 state, global::System.Int32 needAllCards, global::System.Int32 placeHeight, global::System.Int32 placeWidth)
        {
            CardFormation cardFormation = new CardFormation();
            cardFormation.CardFormationID = cardFormationID;
            cardFormation.FormationName = formationName;
            cardFormation.Describe = describe;
            cardFormation.Popularity = popularity;
            cardFormation.State = state;
            cardFormation.NeedAllCards = needAllCards;
            cardFormation.PlaceHeight = placeHeight;
            cardFormation.PlaceWidth = placeWidth;
            return cardFormation;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardFormationID
        {
            get
            {
                return _CardFormationID;
            }
            set
            {
                if (_CardFormationID != value)
                {
                    OnCardFormationIDChanging(value);
                    ReportPropertyChanging("CardFormationID");
                    _CardFormationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CardFormationID");
                    OnCardFormationIDChanged();
                }
            }
        }
        private global::System.Int32 _CardFormationID;
        partial void OnCardFormationIDChanging(global::System.Int32 value);
        partial void OnCardFormationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FormationName
        {
            get
            {
                return _FormationName;
            }
            set
            {
                OnFormationNameChanging(value);
                ReportPropertyChanging("FormationName");
                _FormationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FormationName");
                OnFormationNameChanged();
            }
        }
        private global::System.String _FormationName;
        partial void OnFormationNameChanging(global::System.String value);
        partial void OnFormationNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Describe
        {
            get
            {
                return _Describe;
            }
            set
            {
                OnDescribeChanging(value);
                ReportPropertyChanging("Describe");
                _Describe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Describe");
                OnDescribeChanged();
            }
        }
        private global::System.String _Describe;
        partial void OnDescribeChanging(global::System.String value);
        partial void OnDescribeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Popularity
        {
            get
            {
                return _Popularity;
            }
            set
            {
                OnPopularityChanging(value);
                ReportPropertyChanging("Popularity");
                _Popularity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Popularity");
                OnPopularityChanged();
            }
        }
        private global::System.Int32 _Popularity;
        partial void OnPopularityChanging(global::System.Int32 value);
        partial void OnPopularityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NeedAllCards
        {
            get
            {
                return _NeedAllCards;
            }
            set
            {
                OnNeedAllCardsChanging(value);
                ReportPropertyChanging("NeedAllCards");
                _NeedAllCards = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedAllCards");
                OnNeedAllCardsChanged();
            }
        }
        private global::System.Int32 _NeedAllCards;
        partial void OnNeedAllCardsChanging(global::System.Int32 value);
        partial void OnNeedAllCardsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceHeight
        {
            get
            {
                return _PlaceHeight;
            }
            set
            {
                OnPlaceHeightChanging(value);
                ReportPropertyChanging("PlaceHeight");
                _PlaceHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceHeight");
                OnPlaceHeightChanged();
            }
        }
        private global::System.Int32 _PlaceHeight;
        partial void OnPlaceHeightChanging(global::System.Int32 value);
        partial void OnPlaceHeightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaceWidth
        {
            get
            {
                return _PlaceWidth;
            }
            set
            {
                OnPlaceWidthChanging(value);
                ReportPropertyChanging("PlaceWidth");
                _PlaceWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceWidth");
                OnPlaceWidthChanged();
            }
        }
        private global::System.Int32 _PlaceWidth;
        partial void OnPlaceWidthChanging(global::System.Int32 value);
        partial void OnPlaceWidthChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Tag_CardFormation", "Ral_CardF_Tag")]
        public EntityCollection<Ral_CardF_Tag> Ral_CardF_Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ral_CardF_Tag>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "Ral_CardF_Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ral_CardF_Tag>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "Ral_CardF_Tag", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Card_CardFormation", "CardFormationCore")]
        public EntityCollection<CardFormationCore> CardFormationCore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CardFormationCore>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormationCore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CardFormationCore>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormationCore", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="CardFormationCore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardFormationCore : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CardFormationCore 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="formationID">FormationID 属性的初始值。</param>
        /// <param name="isHandstand">IsHandstand 属性的初始值。</param>
        /// <param name="isPointCard">IsPointCard 属性的初始值。</param>
        /// <param name="x">X 属性的初始值。</param>
        /// <param name="y">Y 属性的初始值。</param>
        /// <param name="sortIndex">SortIndex 属性的初始值。</param>
        /// <param name="describe">Describe 属性的初始值。</param>
        /// <param name="w">W 属性的初始值。</param>
        public static CardFormationCore CreateCardFormationCore(global::System.Int32 id, global::System.Int32 formationID, global::System.Boolean isHandstand, global::System.Boolean isPointCard, global::System.Int32 x, global::System.Int32 y, global::System.Int32 sortIndex, global::System.String describe, global::System.Int32 w)
        {
            CardFormationCore cardFormationCore = new CardFormationCore();
            cardFormationCore.ID = id;
            cardFormationCore.FormationID = formationID;
            cardFormationCore.IsHandstand = isHandstand;
            cardFormationCore.IsPointCard = isPointCard;
            cardFormationCore.X = x;
            cardFormationCore.Y = y;
            cardFormationCore.SortIndex = sortIndex;
            cardFormationCore.Describe = describe;
            cardFormationCore.W = w;
            return cardFormationCore;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormationID
        {
            get
            {
                return _FormationID;
            }
            set
            {
                OnFormationIDChanging(value);
                ReportPropertyChanging("FormationID");
                _FormationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormationID");
                OnFormationIDChanged();
            }
        }
        private global::System.Int32 _FormationID;
        partial void OnFormationIDChanging(global::System.Int32 value);
        partial void OnFormationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHandstand
        {
            get
            {
                return _IsHandstand;
            }
            set
            {
                OnIsHandstandChanging(value);
                ReportPropertyChanging("IsHandstand");
                _IsHandstand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHandstand");
                OnIsHandstandChanged();
            }
        }
        private global::System.Boolean _IsHandstand;
        partial void OnIsHandstandChanging(global::System.Boolean value);
        partial void OnIsHandstandChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPointCard
        {
            get
            {
                return _IsPointCard;
            }
            set
            {
                OnIsPointCardChanging(value);
                ReportPropertyChanging("IsPointCard");
                _IsPointCard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPointCard");
                OnIsPointCardChanged();
            }
        }
        private global::System.Boolean _IsPointCard;
        partial void OnIsPointCardChanging(global::System.Boolean value);
        partial void OnIsPointCardChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Int32 _X;
        partial void OnXChanging(global::System.Int32 value);
        partial void OnXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Int32 _Y;
        partial void OnYChanging(global::System.Int32 value);
        partial void OnYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private global::System.Int32 _SortIndex;
        partial void OnSortIndexChanging(global::System.Int32 value);
        partial void OnSortIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Describe
        {
            get
            {
                return _Describe;
            }
            set
            {
                OnDescribeChanging(value);
                ReportPropertyChanging("Describe");
                _Describe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Describe");
                OnDescribeChanged();
            }
        }
        private global::System.String _Describe;
        partial void OnDescribeChanging(global::System.String value);
        partial void OnDescribeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 W
        {
            get
            {
                return _W;
            }
            set
            {
                OnWChanging(value);
                ReportPropertyChanging("W");
                _W = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("W");
                OnWChanged();
            }
        }
        private global::System.Int32 _W;
        partial void OnWChanging(global::System.Int32 value);
        partial void OnWChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> H
        {
            get
            {
                return _H;
            }
            set
            {
                OnHChanging(value);
                ReportPropertyChanging("H");
                _H = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H");
                OnHChanged();
            }
        }
        private Nullable<global::System.Int32> _H;
        partial void OnHChanging(Nullable<global::System.Int32> value);
        partial void OnHChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Card_CardFormation", "CardFormation")]
        public CardFormation CardFormation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormation").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CardFormation> CardFormationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Card_CardFormation", "CardFormation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="dic_Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dic_Province : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 dic_Province 对象。
        /// </summary>
        /// <param name="provinceId">ProvinceId 属性的初始值。</param>
        public static dic_Province Createdic_Province(global::System.Int32 provinceId)
        {
            dic_Province dic_Province = new dic_Province();
            dic_Province.ProvinceId = provinceId;
            return dic_Province;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProvinceId
        {
            get
            {
                return _ProvinceId;
            }
            set
            {
                if (_ProvinceId != value)
                {
                    OnProvinceIdChanging(value);
                    ReportPropertyChanging("ProvinceId");
                    _ProvinceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProvinceId");
                    OnProvinceIdChanged();
                }
            }
        }
        private global::System.Int32 _ProvinceId;
        partial void OnProvinceIdChanging(global::System.Int32 value);
        partial void OnProvinceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProvinceName
        {
            get
            {
                return _ProvinceName;
            }
            set
            {
                OnProvinceNameChanging(value);
                ReportPropertyChanging("ProvinceName");
                _ProvinceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProvinceName");
                OnProvinceNameChanged();
            }
        }
        private global::System.String _ProvinceName;
        partial void OnProvinceNameChanging(global::System.String value);
        partial void OnProvinceNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="Dictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dictionary : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Dictionary 对象。
        /// </summary>
        /// <param name="enumDictionaryId">EnumDictionaryId 属性的初始值。</param>
        public static Dictionary CreateDictionary(global::System.Int32 enumDictionaryId)
        {
            Dictionary dictionary = new Dictionary();
            dictionary.EnumDictionaryId = enumDictionaryId;
            return dictionary;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnumDictionaryId
        {
            get
            {
                return _EnumDictionaryId;
            }
            set
            {
                if (_EnumDictionaryId != value)
                {
                    OnEnumDictionaryIdChanging(value);
                    ReportPropertyChanging("EnumDictionaryId");
                    _EnumDictionaryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnumDictionaryId");
                    OnEnumDictionaryIdChanged();
                }
            }
        }
        private global::System.Int32 _EnumDictionaryId;
        partial void OnEnumDictionaryIdChanging(global::System.Int32 value);
        partial void OnEnumDictionaryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnumName
        {
            get
            {
                return _EnumName;
            }
            set
            {
                OnEnumNameChanging(value);
                ReportPropertyChanging("EnumName");
                _EnumName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnumName");
                OnEnumNameChanged();
            }
        }
        private global::System.String _EnumName;
        partial void OnEnumNameChanging(global::System.String value);
        partial void OnEnumNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnumValue
        {
            get
            {
                return _EnumValue;
            }
            set
            {
                OnEnumValueChanging(value);
                ReportPropertyChanging("EnumValue");
                _EnumValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnumValue");
                OnEnumValueChanged();
            }
        }
        private global::System.String _EnumValue;
        partial void OnEnumValueChanging(global::System.String value);
        partial void OnEnumValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EuumGroupName
        {
            get
            {
                return _EuumGroupName;
            }
            set
            {
                OnEuumGroupNameChanging(value);
                ReportPropertyChanging("EuumGroupName");
                _EuumGroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EuumGroupName");
                OnEuumGroupNameChanged();
            }
        }
        private global::System.String _EuumGroupName;
        partial void OnEuumGroupNameChanging(global::System.String value);
        partial void OnEuumGroupNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="Ral_CardF_Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ral_CardF_Tag : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Ral_CardF_Tag 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="cardFormationID">CardFormationID 属性的初始值。</param>
        /// <param name="tagID">TagID 属性的初始值。</param>
        /// <param name="cecommendLevel">CecommendLevel 属性的初始值。</param>
        public static Ral_CardF_Tag CreateRal_CardF_Tag(global::System.Int32 id, global::System.Int32 cardFormationID, global::System.Int32 tagID, global::System.Int32 cecommendLevel)
        {
            Ral_CardF_Tag ral_CardF_Tag = new Ral_CardF_Tag();
            ral_CardF_Tag.ID = id;
            ral_CardF_Tag.CardFormationID = cardFormationID;
            ral_CardF_Tag.TagID = tagID;
            ral_CardF_Tag.CecommendLevel = cecommendLevel;
            return ral_CardF_Tag;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardFormationID
        {
            get
            {
                return _CardFormationID;
            }
            set
            {
                OnCardFormationIDChanging(value);
                ReportPropertyChanging("CardFormationID");
                _CardFormationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardFormationID");
                OnCardFormationIDChanged();
            }
        }
        private global::System.Int32 _CardFormationID;
        partial void OnCardFormationIDChanging(global::System.Int32 value);
        partial void OnCardFormationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CecommendLevel
        {
            get
            {
                return _CecommendLevel;
            }
            set
            {
                OnCecommendLevelChanging(value);
                ReportPropertyChanging("CecommendLevel");
                _CecommendLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CecommendLevel");
                OnCecommendLevelChanged();
            }
        }
        private global::System.Int32 _CecommendLevel;
        partial void OnCecommendLevelChanging(global::System.Int32 value);
        partial void OnCecommendLevelChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Tag_Tag", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Tag").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Tag_CardFormation", "CardFormation")]
        public CardFormation CardFormation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "CardFormation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "CardFormation").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CardFormation> CardFormationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "CardFormation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CardFormation>("TarotModel.FK_Ral_CardF_Tag_CardFormation", "CardFormation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="SystemConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemConfig : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SystemConfig 对象。
        /// </summary>
        /// <param name="c_ID">C_ID 属性的初始值。</param>
        /// <param name="c_Key">C_Key 属性的初始值。</param>
        /// <param name="c_Value">C_Value 属性的初始值。</param>
        public static SystemConfig CreateSystemConfig(global::System.Int32 c_ID, global::System.String c_Key, global::System.String c_Value)
        {
            SystemConfig systemConfig = new SystemConfig();
            systemConfig.C_ID = c_ID;
            systemConfig.C_Key = c_Key;
            systemConfig.C_Value = c_Value;
            return systemConfig;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 C_ID
        {
            get
            {
                return _C_ID;
            }
            set
            {
                if (_C_ID != value)
                {
                    OnC_IDChanging(value);
                    ReportPropertyChanging("C_ID");
                    _C_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("C_ID");
                    OnC_IDChanged();
                }
            }
        }
        private global::System.Int32 _C_ID;
        partial void OnC_IDChanging(global::System.Int32 value);
        partial void OnC_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String C_Key
        {
            get
            {
                return _C_Key;
            }
            set
            {
                OnC_KeyChanging(value);
                ReportPropertyChanging("C_Key");
                _C_Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("C_Key");
                OnC_KeyChanged();
            }
        }
        private global::System.String _C_Key;
        partial void OnC_KeyChanging(global::System.String value);
        partial void OnC_KeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String C_Value
        {
            get
            {
                return _C_Value;
            }
            set
            {
                OnC_ValueChanging(value);
                ReportPropertyChanging("C_Value");
                _C_Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("C_Value");
                OnC_ValueChanged();
            }
        }
        private global::System.String _C_Value;
        partial void OnC_ValueChanging(global::System.String value);
        partial void OnC_ValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Tag 对象。
        /// </summary>
        /// <param name="tagID">TagID 属性的初始值。</param>
        /// <param name="tagName">TagName 属性的初始值。</param>
        /// <param name="popularity">Popularity 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static Tag CreateTag(global::System.Int32 tagID, global::System.String tagName, global::System.Int32 popularity, global::System.Int32 state)
        {
            Tag tag = new Tag();
            tag.TagID = tagID;
            tag.TagName = tagName;
            tag.Popularity = popularity;
            tag.State = state;
            return tag;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                if (_TagID != value)
                {
                    OnTagIDChanging(value);
                    ReportPropertyChanging("TagID");
                    _TagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Popularity
        {
            get
            {
                return _Popularity;
            }
            set
            {
                OnPopularityChanging(value);
                ReportPropertyChanging("Popularity");
                _Popularity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Popularity");
                OnPopularityChanged();
            }
        }
        private global::System.Int32 _Popularity;
        partial void OnPopularityChanging(global::System.Int32 value);
        partial void OnPopularityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TarotModel", "FK_Ral_CardF_Tag_Tag", "Ral_CardF_Tag")]
        public EntityCollection<Ral_CardF_Tag> Ral_CardF_Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ral_CardF_Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Ral_CardF_Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ral_CardF_Tag>("TarotModel.FK_Ral_CardF_Tag_Tag", "Ral_CardF_Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TarotModel", Name="TarotCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TarotCard : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TarotCard 对象。
        /// </summary>
        /// <param name="cardID">CardID 属性的初始值。</param>
        /// <param name="cardName">CardName 属性的初始值。</param>
        /// <param name="cardUrl">CardUrl 属性的初始值。</param>
        /// <param name="isBigAkana">IsBigAkana 属性的初始值。</param>
        public static TarotCard CreateTarotCard(global::System.Int32 cardID, global::System.String cardName, global::System.String cardUrl, global::System.Boolean isBigAkana)
        {
            TarotCard tarotCard = new TarotCard();
            tarotCard.CardID = cardID;
            tarotCard.CardName = cardName;
            tarotCard.CardUrl = cardUrl;
            tarotCard.IsBigAkana = isBigAkana;
            return tarotCard;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                if (_CardID != value)
                {
                    OnCardIDChanging(value);
                    ReportPropertyChanging("CardID");
                    _CardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CardID");
                    OnCardIDChanged();
                }
            }
        }
        private global::System.Int32 _CardID;
        partial void OnCardIDChanging(global::System.Int32 value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardName
        {
            get
            {
                return _CardName;
            }
            set
            {
                OnCardNameChanging(value);
                ReportPropertyChanging("CardName");
                _CardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardName");
                OnCardNameChanged();
            }
        }
        private global::System.String _CardName;
        partial void OnCardNameChanging(global::System.String value);
        partial void OnCardNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardUrl
        {
            get
            {
                return _CardUrl;
            }
            set
            {
                OnCardUrlChanging(value);
                ReportPropertyChanging("CardUrl");
                _CardUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardUrl");
                OnCardUrlChanged();
            }
        }
        private global::System.String _CardUrl;
        partial void OnCardUrlChanging(global::System.String value);
        partial void OnCardUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGongTingPai
        {
            get
            {
                return _IsGongTingPai;
            }
            set
            {
                OnIsGongTingPaiChanging(value);
                ReportPropertyChanging("IsGongTingPai");
                _IsGongTingPai = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGongTingPai");
                OnIsGongTingPaiChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGongTingPai;
        partial void OnIsGongTingPaiChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGongTingPaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBigAkana
        {
            get
            {
                return _IsBigAkana;
            }
            set
            {
                OnIsBigAkanaChanging(value);
                ReportPropertyChanging("IsBigAkana");
                _IsBigAkana = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBigAkana");
                OnIsBigAkanaChanged();
            }
        }
        private global::System.Boolean _IsBigAkana;
        partial void OnIsBigAkanaChanging(global::System.Boolean value);
        partial void OnIsBigAkanaChanged();

        #endregion
    
    }

    #endregion
    
}
