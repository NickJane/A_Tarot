(function (h) { var n = window, v, t, j, g = (h.browser.msie && h.browser.version < 7) ? true : false, m = g ? '<iframe hideFocus="true" frameborder="0" src="about:blank" style="position:absolute;z-index:-1;width:100%;height:100%;top:0px;left:0px;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0)"></iframe>' : "", f = function (e) { e = e || document; return e.compatMode == "CSS1Compat" ? e.documentElement : e.body }, k = function () { if (!j) { j = 1976 } return ++j }, a = function () { if ("pageXOffset" in n) { return { x: n.pageXOffset || 0, y: n.pageYOffset || 0} } else { var e = f(v); return { x: e.scrollLeft || 0, y: e.scrollTop || 0} } }, d = function () { var e = f(v); return { w: e.clientWidth || 0, h: e.clientHeight || 0} }, q = (function () { var z = document.getElementsByTagName("script"), y = "", w = 0, e = z.length, x = /lhgdialog(?:\.min)?\.js/i; for (; w < e; w++) { if (x.test(z[w].src)) { y = !!document.querySelector ? z[w].src : z[w].getAttribute("src", 4); break } } return y.split("?") })(), b = q[0].substr(0, q[0].lastIndexOf("/") + 1), o = function (w) { if (q[1]) { var z = q[1].split("&"), x = 0, e = z.length, y; for (; x < e; x++) { y = z[x].split("="); if (w === y[0]) { return y[1] } } } return null }, r = o("s") || "default", c = function () { var e = f(v); h(t).css({ width: Math.max(e.scrollWidth, e.clientWidth || 0) - 1 + "px", height: Math.max(e.scrollHeight, e.clientHeight || 0) - 1 + "px" }) }; while (n.parent && n.parent != n) { try { if (n.parent.document.domain != document.domain) { break } } catch (u) { break } n = n.parent } if (o("t") === "self" || n.document.getElementsByTagName("frameset").length > 0) { n = window } v = n.document; try { v.execCommand("BackgroundImageCache", false, true) } catch (u) { } r = r.split(","); for (var s = 0, p = r.length; s < p; s++) { h("head", v).append('<link href="../scripts/lhgdialog/' + b + "skins/" + r[s] + '.css" rel="stylesheet" type="text/css"/>') } h.fn.fixie6png = function () { var y = h("*", this), w, z; for (var x = 0, e = y.length; x < e; x++) { w = h(y[x]).css("ie6png"); z = b + "skins/" + w; if (w) { y[x].style.backgroundImage = "none"; y[x].runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + z + "',sizingMethod='scale')" } } }; h.fn.dialog = function (i) { var e = false; if (this[0]) { e = new h.dialog(i); this.bind("click", e.ShowDialog) } return e }; h.dialog = function (K) { var x = this, P, F, J, i, e, y, W, D, I, l = h.extend({ title: "lhgdialog \u5F39\u51FA\u7A97\u53E3", cover: false, titleBar: true, btnBar: true, xButton: true, maxBtn: true, minBtn: false, cancelBtn: true, width: 400, height: 300, id: "lhgdgId", link: false, html: null, page: null, parent: null, dgOnLoad: null, onXclick: null, onCancel: null, onMinSize: null, fixed: false, top: "center", left: "center", drag: true, skin: r[0], resize: true, autoSize: false, rang: false, timer: null, iconTitle: true, bgcolor: "#fff", opacity: 0.5, args: null, lockScroll: false, autoPos: false, autoCloseFn: null, cancelBtnTxt: "\u53D6\u6D88", loadingText: "\u7A97\u53E3\u5185\u5BB9\u52A0\u8F7D\u4E2D\uFF0C\u8BF7\u7A0D\u7B49..." }, K || {}), U, T = {}, z = false, E, O = function (Y) { var X = Y.style, S = f(v), aa = parseInt(X.left) - S.scrollLeft, Z = parseInt(X.top) - S.scrollTop; X.removeExpression("left"); X.removeExpression("top"); X.setExpression("left", "this.ownerDocument.documentElement.scrollLeft" + aa); X.setExpression("top", "this.ownerDocument.documentElement.scrollTop + " + Z) }, N = function () { var S, X; if (l.html) { if (typeof l.html === "string") { S = '<div id="lhgdg_inbox_' + l.id + '" class="lhgdg_inbox_' + l.skin + '" style="display:none">' + l.html + "</div>" } else { S = '<div id="lhgdg_inbox_' + l.id + '" class="lhgdg_inbox_' + l.skin + '" style="display:none"></div>' } } else { if (l.page) { S = '<iframe id="lhgfrm_' + l.id + '" frameborder="0" src="' + l.page + '" scrolling="auto" style="display:none;width:100%;height:100%;"></iframe>' } } X = ['<div id="lhgdlg_', l.id, '" class="lhgdialog_', l.skin, '" style="width:', l.width, "px;height:", l.height, 'px;">', '<table border="0" cellspacing="0" cellpadding="0" width="100%">', "<tr>", '<td class="lhgdg_leftTop_', l.skin, '"></td>', '<td id="lhgdg_drag_', l.id, '" class="lhgdg_top_', l.skin, '">', l.titleBar ? ('<div class="lhgdg_title_icon_' + l.skin + '">' + (l.iconTitle ? '<div class="lhgdg_icon_' + l.skin + '"></div>' : "") + '<div class="lhgdg_title_' + l.skin + '">' + l.title + "</div>" + (l.minBtn ? ('<a class="lhgdg_minbtn_' + l.skin + '" id="lhgdg_minbtn_' + l.id + '" href="javascript:void(0);" target="_self"></a>') : "") + (l.maxBtn ? ('<a class="lhgdg_maxbtn_' + l.skin + '" id="lhgdg_maxbtn_' + l.id + '" href="javascript:void(0);" target="_self"></a>') : "") + (l.xButton ? ('<a class="lhgdg_xbtn_' + l.skin + '" id="lhgdg_xbtn_' + l.id + '" href="javascript:void(0);" target="_self"></a>') : "") + "</div>") : "", "</td>", '<td class="lhgdg_rightTop_', l.skin, '"></td>', "</tr>", "<tr>", '<td class="lhgdg_left_', l.skin, '"></td>', "<td>", '<table border="0" cellspacing="0" cellpadding="0" width="100%">', "<tr>", '<td id="lhgdg_content_', l.id, '" style="background-color:#fff">', S, '<div id="lhgdg_load_', l.id, '" class="lhgdg_load_', l.skin, '"><span>', l.loadingText, "</span></div>", "</td>", "</tr>", l.btnBar ? ('<tr><td id="lhgdg_btnBar_' + l.id + '" class="lhgdg_btnBar_' + l.skin + '"><div class="lhgdg_btn_div_' + l.skin + '"></div></td></tr>') : "", "</table>", "</td>", '<td class="lhgdg_right_', l.skin, '"></td>', "</tr>", "<tr>", '<td class="lhgdg_leftBottom_', l.skin, '"></td>', '<td class="lhgdg_bottom_', l.skin, '"></td>', '<td id="lhgdg_drop_', l.id, '" class="lhgdg_rightBottom_', l.skin, '"></td>', "</tr>", "</table>", m, "</div>"].join(""); return X }, B = function () { t = h("#lhgdgCover", v)[0]; if (!t) { var S = '<div id="lhgdgCover" style="position:absolute;top:0px;left:0px;background-color:' + l.bgcolor + ';">' + m + "</div>"; t = h(S, v).css("opacity", l.opacity).appendTo(v.body)[0] } if (l.lockScroll) { h("html", v).addClass("lhgdg_lockScroll") } h(n).bind("resize", c); c(); h(t).css({ display: "", zIndex: k() }) }, w = function (ai, ak, ad, af) { var al = d(), ac = a(), ae = parseInt(ai.style.width, 10), S = parseInt(ai.style.height, 10), aj, ah, Y, X, aa, ab, ag, Z; if (af) { Y = g ? ac.x : 0; X = g ? al.w + ac.x - ae : al.w - ae; aa = g ? (X + ac.x - 20) / 2 : (X - 20) / 2; ab = g ? ac.y : 0; ag = g ? al.h + ac.y - S : al.h - S; Z = g ? (ag + ac.y - 20) / 2 : (ag - 20) / 2 } else { Y = ac.x; aa = ac.x + (al.w - ae - 20) / 2; X = ac.x + al.w - ae; ab = ac.y; Z = ac.y + (al.h - S - 20) / 2; ag = ac.y + al.h - S } switch (ad) { case "center": aj = aa; break; case "left": aj = Y; break; case "right": aj = X; break; default: if (af && g) { ad = ad + ac.x } aj = ad; break } switch (ak) { case "center": ah = Z; break; case "top": ah = ab; break; case "bottom": ah = ag; break; default: if (af && g) { ak = ak + ac.y } ah = ak; break } if (ah < ac.y && !af) { ah = ac.y } h(ai).css({ top: ah + "px", left: aj + "px" }); if (af && g) { O(ai) } }, M = function (S) { x.curWin = window; x.curDoc = document; h(S).bind("contextmenu", function (X) { X.preventDefault() }).bind("mousedown", Q); if (l.html && l.html.nodeType) { h(F).append(l.html); l.html.style.display = "" } D = [window]; if (n != window) { D.push(n) } if (l.page) { x.dgFrm = h("#lhgfrm_" + l.id, v)[0]; if (!l.link) { x.dgWin = x.dgFrm.contentWindow; x.dgFrm.lhgDG = x } h(x.dgFrm).bind("load", function () { this.style.display = "block"; if (!l.link) { var X = h.browser.msie ? x.dgWin.document : x.dgWin; h(X).bind("mousedown", Q); D.push(x.dgWin); x.dgDoc = x.dgWin.document; if (l.autoSize) { H() } h.isFunction(l.dgOnLoad) && l.dgOnLoad.call(x) } P.style.display = "none" }) } if (l.xButton && l.titleBar) { h(J).bind("click", l.onXclick || x.cancel) } if (l.maxBtn && l.titleBar) { h(U).bind("click", x.maxSize); h(i).bind("dblclick", x.maxSize) } if (l.minBtn && l.titleBar && h.isFunction(l.onMinSize)) { h(E).bind("click", l.onMinSize) } }, C = function (aa) { var Z = i.offsetHeight, S = e.offsetHeight, X = l.btnBar ? W.offsetHeight : 0, Y = parseInt(aa.style.height, 10) - Z - S - X; if (Y < 0) { Y = 20 } P.style.lineHeight = Y + "px"; y.style.height = Y + "px" }, H = function () { var aa = i.offsetHeight, S = e.offsetHeight, Z = l.btnBar ? W.offsetHeight : 0, ab = e.offsetWidth * 2, X, ac, Y; if (l.html) { X = Math.max(F.scrollHeight, F.clientHeight || 0); ac = Math.max(F.scrollWidth, F.clientWidth || 0) } else { if (l.page && !l.link) { if (!x.dgDoc) { return } Y = f(x.dgDoc); X = Math.max(Y.scrollHeight, Y.clientHeight || 0); ac = Math.max(Y.scrollWidth, Y.clientWidth || 0) } } X = X + aa + S + Z; ac = ac + ab; x.reDialogSize(ac, X); w(x.dg, "center", "center", l.fixed) }, R = function (ab) { var ad, Y, X, Z, aa = D, af, ac; function ae(ah) { var ag = { x: ah.screenX, y: ah.screenY }; Z = { x: Z.x + (ag.x - ad.x), y: Z.y + (ag.y - ad.y) }; ad = ag; if (l.rang) { if (Z.x < ac.x) { Z.x = ac.x } if (Z.y < ac.y) { Z.y = ac.y } if (Z.x > Y) { Z.x = Y } if (Z.y > X) { Z.y = X } } x.dg.style.top = l.fixed && !g ? Z.y - ac.y + "px" : Z.y + "px"; x.dg.style.left = l.fixed && !g ? Z.x - ac.x + "px" : Z.x + "px" } function S(ai) { for (var ah = 0, ag = aa.length; ah < ag; ah++) { h(aa[ah].document).unbind("mousemove", ae); h(aa[ah].document).unbind("mouseup", S) } ad = null; ab = null; if (Z.y < ac.y) { x.dg.style.top = ac.y + "px" } if (l.fixed && g) { O(x.dg) } if (h.browser.msie) { x.dg.releaseCapture() } } h(ab).bind("mousedown", function (al) { if (al.target.id === "lhgdg_xbtn_" + l.id) { return } af = d(); ac = a(); var ag = x.dg.offsetLeft, am = x.dg.offsetTop, ai = x.dg.clientWidth, ak = x.dg.clientHeight; Z = l.fixed && !g ? { x: ag + ac.x, y: am + ac.y} : { x: ag, y: am }; ad = { x: al.screenX, y: al.screenY }; Y = af.w + ac.x - ai; X = af.h + ac.y - ak; x.dg.style.zIndex = parseInt(j, 10) + 1; for (var aj = 0, ah = aa.length; aj < ah; aj++) { h(aa[aj].document).bind("mousemove", ae); h(aa[aj].document).bind("mouseup", S) } al.preventDefault(); if (h.browser.msie) { x.dg.setCapture() } }) }, L = function (aa) { var ac, X, ad, Y, Z = D, af, ag, ab; function ae(ai) { var ah = { x: ai.screenX, y: ai.screenY }; af = { w: ah.x - ac.x, h: ah.y - ac.y }; if (af.w < 200) { af.w = 200 } if (af.h < 100) { af.h = 100 } x.dg.style.top = l.fixed ? Y.y - ab.y + "px" : Y.y + "px"; x.dg.style.left = l.fixed ? Y.x - ab.x + "px" : Y.x + "px"; x.reDialogSize(af.w, af.h) } function S(aj) { for (var ai = 0, ah = Z.length; ai < ah; ai++) { h(Z[ai].document).unbind("mousemove", ae); h(Z[ai].document).unbind("mouseup", S) } ac = null; aa = null; if (h.browser.msie) { x.dg.releaseCapture() } } h(aa).bind("mousedown", function (ak) { ad = x.dg.clientWidth; X = x.dg.clientHeight; af = { w: ad, h: X }; ag = d(); ab = a(); var ah = x.dg.offsetLeft, al = x.dg.offsetTop; Y = l.fixed ? { x: ah + ab.x, y: al + ab.y} : { x: ah, y: al }; ac = { x: ak.screenX - ad, y: ak.screenY - X }; x.dg.style.zIndex = parseInt(j, 10) + 1; for (var aj = 0, ai = Z.length; aj < ai; aj++) { h(Z[aj].document).bind("mousemove", ae); h(Z[aj].document).bind("mouseup", S) } ak.preventDefault(); if (h.browser.msie) { x.dg.setCapture() } }) }, Q = function (S) { x.dg.style.zIndex = parseInt(j, 10) + 1; j = parseInt(x.dg.style.zIndex, 10); S.stopPropagation() }, V = function () { if (l.autoPos === true) { l.autoPos = { left: "center", top: "center"} } w(x.dg, l.autoPos.top, l.autoPos.left, l.fixed) }, G = function () { if (h.isFunction(l.onCancel)) { l.onCancel.call(x) } x.cancel() }, A = function () { if (x.dgFrm) { if (!l.link) { h(x.dgFrm).unbind("load") } x.dgFrm.src = "about:blank"; x.dgFrm = null } if (l.html && l.html.nodeType) { h(x.curDoc.body).append(l.html); l.html.style.display = "none" } if (l.autoPos) { h(n).unbind("resize", V) } D = []; h(x.dg).remove(); x.dg = null; z = false; T = {}; P = F = J = i = e = W = y = U = E = null }; x.ShowDialog = function () { if (h("#lhgdlg_" + l.id, v)[0]) { return x } if (l.cover) { B() } if (l.fixed) { l.maxBtn = false; l.minBtn = false } var X = l.fixed && !g ? "fixed" : "absolute", S = N(); x.dg = h(S, v).css({ position: X, zIndex: k() }).appendTo(v.body)[0]; P = h("#lhgdg_load_" + l.id, v)[0]; F = h("#lhgdg_inbox_" + l.id, v)[0]; J = h("#lhgdg_xbtn_" + l.id, v)[0]; i = h("#lhgdg_drag_" + l.id, v)[0]; e = h("#lhgdg_drop_" + l.id, v)[0]; W = h("#lhgdg_btnBar_" + l.id, v)[0]; y = h("#lhgdg_content_" + l.id, v)[0]; U = h("#lhgdg_maxbtn_" + l.id, v)[0]; E = h("#lhgdg_minbtn_" + l.id, v)[0]; C(x.dg); w(x.dg, l.top, l.left, l.fixed); M(x.dg); if (l.drag) { R(i) } else { i.style.cursor = "default" } if (l.resize) { L(e) } else { e.style.cursor = "default" } if (g && h(e).css("ie6png")) { h(x.dg).fixie6png() } if (l.btnBar && l.cancelBtn) { x.addBtn("dgcancelBtn", l.cancelBtnTxt, G) } if (l.html) { P.style.display = "none"; F.style.display = ""; if (l.autoSize) { H() } } if (l.timer) { x.closeTime(l.timer, l.autoCloseFn) } if (l.html && h.isFunction(l.dgOnLoad)) { l.dgOnLoad.call(x) } if (l.autoPos) { h(n).bind("resize", V) } }; x.reDialogSize = function (X, S) { h(x.dg).css({ width: X + "px", height: S + "px" }); C(x.dg) }; x.maxSize = function () { var X, S; X = d(); S = a(); if (!z) { T.dgW = x.dg.offsetWidth; T.dgH = x.dg.offsetHeight; T.dgT = x.dg.style.top; T.dgL = x.dg.style.left; h(x.dg).css({ top: S.y + "px", left: S.x + "px" }); x.reDialogSize(X.w, X.h); h(U).addClass("lhgdg_rebtn_" + l.skin).removeClass("lhgdg_maxbtn_" + l.skin); if (l.drag) { h(i).unbind("mousedown").css("cursor", "default") } if (l.resize) { h(e).unbind("mousedown").css("cursor", "default") } z = true } else { x.reDialogSize(T.dgW, T.dgH); h(x.dg).css({ top: T.dgT, left: T.dgL }); h(U).addClass("lhgdg_maxbtn_" + l.skin).removeClass("lhgdg_rebtn_" + l.skin); if (l.drag) { R(i); i.style.cursor = "move" } if (l.resize) { L(e); e.style.cursor = "nw-resize" } z = false } }; x.SetMinBtn = function (S) { if (l.minBtn && l.titleBar) { if (h.isFunction(S)) { h(E).unbind("click").bind("click", S) } } }; x.addBtn = function (ab, S, Z, aa) { aa = aa || "left"; if (l.btnBar) { if (h("#lhgdg_" + l.id + "_" + ab, v)[0]) { h("#lhgdg_" + l.id + "_" + ab, v).html("<em>" + S + "</em>").unbind("click").bind("click", Z) } else { var Y = '<a id="lhgdg_' + l.id + "_" + ab + '" class="lhgdg_button_' + l.skin + '" href="javascript:void(0);" target="_self"><em>' + S + "</em></a>", X = h(Y, v).bind("click", Z)[0]; if (aa === "left") { h(".lhgdg_btn_div_" + l.skin, W).prepend(X) } else { h(".lhgdg_btn_div_" + l.skin, W).append(X) } } } }; x.removeBtn = function (S) { if (h("#lhgdg_" + l.id + "_" + S, v)[0]) { h("#lhgdg_" + l.id + "_" + S, v).remove() } }; x.SetIndex = function () { x.dg.style.zIndex = parseInt(j, 10) + 1; j = parseInt(x.dg.style.zIndex, 10) }; x.SetXbtn = function (S, X) { if (l.xButton && l.titleBar) { if (h.isFunction(S)) { h(J).unbind("click").bind("click", S) } if (X) { J.style.display = "none" } else { J.style.display = "" } } }; x.SetTitle = function (S) { if (l.titleBar && typeof S === "string") { h(".lhgdg_title_" + l.skin, x.dg).html(S) } }; x.cancel = function () { A(); if (t) { if (l.parent && l.parent.isCover) { var S = l.parent.dg.style.zIndex; t.style.zIndex = parseInt(S, 10) - 1 } else { t.style.display = "none" } if (l.lockScroll) { h("html", v).removeClass("lhgdg_lockScroll") } } }; x.cleanDialog = function () { if (x.dg) { A() } if (t) { h(t).remove(); t = null } }; x.closeTime = function (X, S, Y) { if (I) { clearTimeout(I) } if (S) { S.call(x) } if (X) { I = setTimeout(function () { if (Y) { Y.call(x) } x.cancel(); clearTimeout(I) }, 1000 * X) } }; x.SetPosition = function (X, S) { w(x.dg, S, X, l.fixed) }; x.iWin = function (S) { if (h("#lhgfrm_" + S, v)[0]) { return h("#lhgfrm_" + S, v)[0].contentWindow } return null }; x.iDoc = function (S) { if (h("#lhgfrm_" + S, v)[0]) { return h("#lhgfrm_" + S, v)[0].contentWindow.document } return null }; x.iDG = function (S) { return v.getElementById("lhgdlg_" + S) || null }; x.SetCancelBtn = function (S, X) { X = X || x.cancel; if (h("#lhgdg_" + l.id + "_dgcancelBtn", v)[0]) { h("#lhgdg_" + l.id + "_dgcancelBtn", v).html("<em>" + S + "</em>").unbind("click").bind("click", X) } }; x.setArgs = function (S) { l.args = S }; x.getArgs = function () { return l.args }; x.dialogId = l.id; x.parent = l.parent; x.isCover = l.cover ? true : false; h(window).bind("unload", x.cleanDialog) }; h(function () { var e = setTimeout(function () { new h.dialog({ id: "reLoadId", html: "lhgdialog", width: 100, title: "reLoad", height: 100, left: -9000, btnBar: false }).ShowDialog(); clearTimeout(e) }, 150) }) })(window.lhgcore || window.jQuery);
var dg1 = new $.dialog();
function OpenUrl(url, title, height, width) {
    var id = 'dgNew1'; //+ parseInt(Math.random() * 100 + 1);
    dg1 = new $.dialog(
    { 
        id: id, page: url, link: false,
        width: (width ? width : 800), 
        height: (height?height: 580), title: title, iconTitle: false, cover: true, loadingText: '窗口内容加载中，请稍候……',cancelBtnTxt:'确定'
        });
    dg1.ShowDialog();
}
function CloseUrl() {
    dg1.cancel();
}